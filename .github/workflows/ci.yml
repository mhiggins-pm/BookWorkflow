# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: API CI
on:
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Nodejs 12.x
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

# install required tooling (swaggerhub cli and jq)

      - name: Install SwaggerHub cli  
        run: npm install swaggerhub-cli -g && npm install js-yaml
        
      - name: Install openapi-diff
        run: npm install openapi-diff --save-dev
        
      - name: Install jq utility
        run: sudo apt-get --yes --quiet install jq

      - name: Prepare scripts for execution
        run: |
          chmod +x ./scripts/cicd_check_comments.sh  
          chmod +x ./scripts/cicd_check_validation.sh 
          chmod +x ./scripts/cicd_get_auto-mock.sh 
          chmod +x ./scripts/cicd_get_version.sh
          chmod +x ./scripts/breaking_changes.sh          
          chmod +x ./scripts/test_engine.sh

# get the API Version from the yaml file
           
      - name: Get the API Version from the yaml file
        run: |
          XVER=$(./scripts/cicd_get_version.sh ./yaml-resolved/swagger.yaml yaml)
          echo "VER=$XVER" >> $GITHUB_ENV
          echo "branch ---> ${{ github.event.pull_request.head.ref }}"
          echo "api ---> $API"
          echo "version ---> $XVER"

# run validation checks, that fail with exit 1
#  - un-redsolved comments
#  - critical rule violations
#  - payload Assertion vs. Auto-mock
#  - breaking changes from version 1.0.0, "... y y" means no fail but print report

      - name: Check - Open commenets    
        run: ./scripts/cicd_check_comments.sh $ORG $API $VER
  
      - name: Check - Standardization rule violations   
        run: ./scripts/cicd_check_validation.sh $ORG $API $VER
  
      - name: Check - Payload compliance   
        run: |
          XPATH2=${XPATH#'/'}
          ./scripts/cicd_get_auto-mock.sh $ORG $API $VER $XPATH json ./assertions/$ORG-$API-$VER-$XPATH2-get.txt
  
      - name: Check - Breaking changes but Proceed set to yes 
        run: ./scripts/breaking_changes.sh $ORG $API $VER 1.0.0 y y

# run the ReadyAPI test suites on TestEngine

      - name: Check - Run ReadyAPI Functional Test Suite on TestEngine
        run: ./scripts/test_engine.sh $TE_USER $TE_PASSWORD functional ./readyapi-tests/SwaggerHub-Book-readyapi-project.xml GitHubActions
                
      - name: Check - Run ReadyAPI Secutity Test Suite on TestEngine
        run: ./scripts/test_engine.sh $TE_USER $TE_PASSWORD security ./readyapi-tests/SwaggerHub-Book-readyapi-project.xml GitHubActions
                
# if all checks pass:
#  - set the API to published 
#  - set the API/Version to Defauly
#  - publish documentation to bump.sh

      - name: Action - Set API to Published
        run: |
          swaggerhub api:publish "$ORG/$API/$VER"
      
      - name: Action - Set API to Default
        run: |
          swaggerhub api:setdefault "$ORG/$API/$VER"
          
      - name: Action - Push API documentation to bump.sh
        uses: bump-sh/github-action@0.1
        with:
          id: d3df0e2b-b07e-4bab-8aee-4fc8d6daa54f
          token: 67843a6e628f94b2811231c6454116a7
          file: ./yaml-resolved/swagger.yaml
          
    env:
      HOME: ${{ './scripts' }}
      SWAGGERHUB_API_KEY: ${{ secrets.SWAGGERHUB_KEY }}
      SWAGGERHUB_URL: ${{ 'https://swaggerhub.mwhiggins.com/v1' }}
      NODE_EXTRA_CA_CERTS: ${{ './.ssh/ca_bundle.crt' }}
      ORG: ${{ 'SmartBear_Org' }}
      API: ${{ 'Book' }}
      XPATH: ${{ '/book' }}
      TE_USER: ${{ 'mhiggins' }}
      TE_PASSWORD: ${{ secrets.TE_PASSWORD }}

